{
  "type": "step_based",
  "name": "Copy of val_test",
  "active": false,
  "creationTag": {
    "versionNumber": 0,
    "lastModifiedBy": {
      "login": "kundansinghsorout9@gmail.com"
    },
    "lastModifiedOn": 1682593384904
  },
  "versionTag": {
    "versionNumber": 1,
    "lastModifiedBy": {
      "login": "kundansinghsorout9@gmail.com"
    },
    "lastModifiedOn": 1682600007609
  },
  "checklists": {
    "checklists": []
  },
  "delayedTriggersBehavior": {
    "delayWhileRunning": true,
    "squashDelayedTriggers": true,
    "suppressTriggersWhileRunning": true
  },
  "tags": [],
  "triggers": [
    {
      "id": "1NuUTuRs",
      "type": "temporal",
      "name": "Time-based",
      "delay": 5,
      "active": false,
      "params": {
        "repeatFrequency": 1,
        "frequency": "Hourly",
        "startingFrom": "2023-04-25T08:44:00.000Z",
        "daysOfWeek": [
          "Tuesday"
        ],
        "monthlyRunOn": "ON_THE_DAY",
        "minute": 14,
        "hour": 14,
        "timezone": "SERVER",
        "lastUpdate": 1682600007610
      }
    },
    {
      "id": "ynxgwxgL",
      "type": "temporal",
      "name": "Time-based",
      "delay": 5,
      "active": false,
      "params": {
        "repeatFrequency": 1,
        "frequency": "Daily",
        "startingFrom": "2023-04-26T13:50:00.000Z",
        "daysOfWeek": [
          "Wednesday"
        ],
        "minute": 20,
        "hour": 19,
        "timezone": "SERVER",
        "lastUpdate": 1682600007610
      }
    }
  ],
  "reporters": [
    {
      "active": true,
      "messaging": {
        "type": "mail-scenario",
        "configuration": {
          "channelId": "Kundan Singh",
          "subject": "DSS scenario ${scenarioName}: ${outcome}",
          "recipient": "kundansinghsorout9@gmail.com",
          "sendAsHTML": false,
          "attachments": [],
          "messageSource": "INLINE",
          "templateFormat": "FREEMARKER",
          "templateName": "default.ftl",
          "message": "Hi Your Validation test cases has been started to run."
        }
      },
      "id": "iMRO6RX9",
      "name": "send mail",
      "runConditionEnabled": false,
      "runCondition": "outcome !\u003d \u0027SUCCESS\u0027",
      "phase": "START"
    },
    {
      "active": false,
      "messaging": {
        "type": "shell-scenario",
        "configuration": {
          "sendEverythingAsVariables": false,
          "variables": []
        }
      },
      "id": "e8YqEiUt",
      "name": "Pytest command",
      "runConditionEnabled": true,
      "runCondition": "outcome !\u003d \u0027SUCCESS\u0027",
      "phase": "END"
    }
  ],
  "params": {
    "steps": [
      {
        "id": "build_0_true_d_preprocessed_data",
        "type": "build_flowitem",
        "name": "Step #1",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "builds": [
            {
              "type": "DATASET",
              "itemId": "preprocessed_data",
              "partitionsSpec": ""
            }
          ],
          "jobType": "RECURSIVE_BUILD",
          "refreshHiveMetastore": true,
          "handleWarningsAs": "WARNING",
          "proceedOnFailure": false
        }
      },
      {
        "id": "build_0_true",
        "type": "build_flowitem",
        "name": "Step #2",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "builds": [
            {
              "type": "SAVED_MODEL",
              "itemId": "wjL6zeFP",
              "partitionsSpec": ""
            }
          ],
          "jobType": "RECURSIVE_BUILD",
          "refreshHiveMetastore": true,
          "handleWarningsAs": "WARNING",
          "proceedOnFailure": false
        }
      },
      {
        "id": "check_WARNING_d_preprocessed_data_m_wjL6zeFP",
        "type": "check_dataset",
        "name": "Step #3",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "checks": [
            {
              "type": "DATASET",
              "itemId": "preprocessed_data",
              "partitionsSpec": ""
            },
            {
              "type": "SAVED_MODEL",
              "itemId": "wjL6zeFP",
              "partitionsSpec": ""
            }
          ],
          "handleWarningsAs": "WARNING",
          "proceedOnFailure": false
        }
      },
      {
        "id": "check_consistency",
        "type": "check_consistency",
        "name": "Step #4",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "handleWarningsAs": "WARNING",
          "proceedOnFailure": false
        }
      },
      {
        "id": "comp_metrics_d_preprocessed_data",
        "type": "compute_metrics",
        "name": "Step #5",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "computes": [
            {
              "type": "DATASET",
              "itemId": "preprocessed_data",
              "partitionsSpec": ""
            }
          ],
          "proceedOnFailure": false
        }
      },
      {
        "id": "custom_python_pCReIxQEK87YrOkzGzv/YA",
        "type": "custom_python",
        "name": "Step #7",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "script": "# -*- coding: utf-8 -*-\nimport dataiku\nimport pandas as pd, numpy as np\nfrom dataiku import pandasutils as pdu\n\nfrom sklearn.metrics import precision_score, recall_score\nfrom sklearn.preprocessing import MultiLabelBinarizer, LabelEncoder\n\n# Read recipe inputs\npreprocessed_data \u003d dataiku.Dataset(\"preprocessed_data\")\npreprocessed_data_df \u003d preprocessed_data.get_dataframe()\n\ndef get_precission(p_name):\n    client \u003d dataiku.api_client()\n    project \u003d client.get_project(p_name)\n    all_models \u003d dataiku.Model(p_name).list_models()\n    latest_model_id \u003d all_models[0][\"id\"]\n    m \u003d dataiku.Model(latest_model_id)\n    my_predictor \u003d m.get_predictor()\n    my_clf \u003d my_predictor._clf\n    y_test \u003d preprocessed_data_df[:10000][\"POL_STATUS\"]\n    y_predict \u003d my_predictor.predict(preprocessed_data_df[:10000].drop(columns\u003d[\"POL_STATUS\"]))[\"prediction\"]\n\n    le \u003d LabelEncoder()\n    le.fit(list(y_test))\n\n    return precision_score(\n              le.transform(list(y_test)), \n              le.transform(y_predict),\n              average\u003d\u0027macro\u0027\n          )\n\n\n#import git\n\n#def merge(source_branch, dest_branch):\n#    repo \u003d git.Repo(repository_path)\n#    repo.git.checkout(dest_branch)\n#    repo.git.merge(source_branch)\n#    origin \u003d repo.remote(name\u003d\u0027origin\u0027)\n#    origin.push()\n\np_score_dev \u003d get_precission(\"copy cicd with internal git\")\np_score_main \u003d get_precission(\"cicd with internal git\")\n\nif p_score_main \u003e (p_score_dev - 0.1):\n    print(\"Push the code to Master\")\n    repository_path \u003d \"git@github.com:KundanSinghRsi/cicd.git\"\n    #merge(\"dev\", \"main\")\n    \n    \nelse:\n    print(\"Don\u0027t push the code\")\n\n",
          "envSelection": {
            "envMode": "INHERIT",
            "envName": "dash"
          },
          "proceedOnFailure": false
        }
      },
      {
        "id": "report762a073cc27e52cfe925d82a35f0fadc",
        "type": "send_report",
        "name": "Step #6",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "failOnMessageNotSent": true,
          "messaging": {
            "type": "mail-scenario",
            "configuration": {
              "channelId": "Kundan Singh",
              "subject": "DSS scenario ${scenarioName}: ${outcome}",
              "recipient": "kundan.singh@rsystems.com",
              "sendAsHTML": false,
              "attachments": [],
              "messageSource": "INLINE",
              "templateFormat": "FREEMARKER",
              "templateName": "default.ftl",
              "message": "Hi \n\n    Sending message for compute metrics."
            }
          }
        }
      }
    ]
  },
  "automationLocal": false,
  "customFields": {}
}